Description: fix-string-literals
 Debug and error messages are unquoted, resulting in a compilation security
 warning that results in a failure to build.
 .
 This patch replaces (msg) with ("%", msg) which makes the strings safer
 and fixes the build failure.
Author: Jonathan Carter <jcc@debian.org>

--- pythonqt-3.2.orig/generated_cpp_56/com_trolltech_qt_core/com_trolltech_qt_core1.cpp
+++ pythonqt-3.2/generated_cpp_56/com_trolltech_qt_core/com_trolltech_qt_core1.cpp
@@ -4951,32 +4951,32 @@ return new QMessageLogger(file, line, fu
 
 void PythonQtWrapper_QMessageLogger::critical(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->critical(msg));
+  ( theWrappedObject->critical("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::debug(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->debug(msg));
+  ( theWrappedObject->debug("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::fatal(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->fatal(msg));
+  ( theWrappedObject->fatal("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::info(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->info(msg));
+  ( theWrappedObject->info("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::noDebug(QMessageLogger* theWrappedObject, const char*  arg__1) const
 {
-  ( theWrappedObject->noDebug(arg__1));
+  ( theWrappedObject->noDebug("%s", arg__1));
 }
 
 void PythonQtWrapper_QMessageLogger::warning(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->warning(msg));
+  ( theWrappedObject->warning("%s", msg));
 }
 
 
