Description: fix-string-literals
 Debug and error messages are unquoted, resulting in a compilation security
 warning that results in a fail to build.
 .
 This patch replaces (msg) with ("%", msg) which makes the strings safer
 and fixes the build failure.
 .
 pythonqt (3.2-1) unstable; urgency=medium
 .
   * New upstream release
   * Adopting package as part of Python team (DMPT)
     - debian/control: Setting new maintainer and uploader
     - debian/copyright: Update with new maintainer
   * Update compat level to 10
   * Update standards version to 4.1.0.0
   * Update debian/copyright to copyright-format 1.0
   * Remove ancient breaks/replace
   * Build against qt5 instead of qt4 (Closes: #832610)
   * Switch build system from cmake to qmake
     - Remove unneeded patches
     - Update debian/rules
Author: Jonathan Carter <jcc@debian.org>
Bug-Debian: https://bugs.debian.org/832610

---

Origin: debian
Last-Update: 2017-08-22

--- pythonqt-3.2.orig/generated_cpp_56/com_trolltech_qt_core/com_trolltech_qt_core1.cpp
+++ pythonqt-3.2/generated_cpp_56/com_trolltech_qt_core/com_trolltech_qt_core1.cpp
@@ -4951,32 +4951,32 @@ return new QMessageLogger(file, line, fu
 
 void PythonQtWrapper_QMessageLogger::critical(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->critical(msg));
+  ( theWrappedObject->critical("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::debug(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->debug(msg));
+  ( theWrappedObject->debug("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::fatal(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->fatal(msg));
+  ( theWrappedObject->fatal("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::info(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->info(msg));
+  ( theWrappedObject->info("%s", msg));
 }
 
 void PythonQtWrapper_QMessageLogger::noDebug(QMessageLogger* theWrappedObject, const char*  arg__1) const
 {
-  ( theWrappedObject->noDebug(arg__1));
+  ( theWrappedObject->noDebug("%s", arg__1));
 }
 
 void PythonQtWrapper_QMessageLogger::warning(QMessageLogger* theWrappedObject, const char*  msg) const
 {
-  ( theWrappedObject->warning(msg));
+  ( theWrappedObject->warning("%s", msg));
 }
 
 
